tags:
  - name: Blog
    description: Blog management API endpoints

paths:
  /blogs/create:
    post:
      tags:
        - Blog
      summary: Create a new blog post
      description: Creates a new blog post in the database. Requires admin authentication.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the blog post
                  example: "How to Master TypeScript in 2023"
                content:
                  type: string
                  description: The main content of the blog post
                  example: "TypeScript has become essential for modern web development..."
                imageUrl:
                  type: string
                  format: binary
                  description: The featured image for the blog post
                tags:
                  type: array
                  items:
                    type: string
                  description: The tags associated with the blog post
                  example: ["TypeScript", "JavaScript", "Web Development"]
                description: 
                  type: string
                  description: Brief summary of the blog content
                  example: "Learn the fundamentals of TypeScript and how to apply them in real projects"
              required:
                - title
                - content
                - imageUrl
                - description
      responses:
        "201":
          description: Blog created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: "Blog created successfully"
                  data:
                    $ref: "#/components/schemas/blogs"
        "400":
          description: Required field error or validation error
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "500":
          description: Internal server error
  /blogs:
    get:
      tags:
        - Blog
      summary: Retrieve all blogs (Admin access only)
      description: Retrieves all blogs from the database with optional pagination. Requires admin authentication.
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: Number of blogs per page
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Blogs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blogs retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/blogs"
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: number
                      totalPages:
                        type: number
                      totalItems:
                        type: number
        "500":
          description: Internal server error
  /blogs/{id}:
    get:
      tags:
        - Blog
      summary: Retrieve a single blog (Admin or Subscriber access)
      description: Retrieves a single blog from the database by its ID. Requires admin or subscriber authentication.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Blog retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blog retrieved successfully"
                  data:
                    $ref: "#/components/schemas/blogs"
        "404":
          description: Blog not found
        "500":
          description: Internal server error
  /blogs/update/{id}:
    put:
      tags:
        - Blog
      summary: Update a blog post
      description: Updates an existing blog post in the database. Requires authentication - only the author or an admin can update the blog.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The updated title of the blog post
                  example: "Updated: How to Master TypeScript in 2023"
                content:
                  type: string
                  description: The updated content of the blog post
                imageUrl:
                  type: string
                  format: binary
                  description: The updated featured image for the blog post
                tags:
                  type: array
                  items:
                    type: string
                  description: The updated tags associated with the blog post
                description: 
                  type: string
                  description: Updated brief summary of the blog content
              required:
                - title
                - content
      responses:
        "200":
          description: Blog updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blog updated successfully"
                  data:
                    $ref: "#/components/schemas/blogs"
        "400":
          description: Validation error
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "404":
          description: Blog not found
        "500":
          description: Internal server error
  /blogs/by-title:
    get:
      tags:
        - Blog
      summary: Retrieve a blog by title
      description: Retrieves a blog from the database by its title
      parameters:
        - name: title
          in: query
          required: true
          description: The title of the blog to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Blog retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blog retrieved successfully"
                  data:
                    $ref: "#/components/schemas/blogs"
        "404":
          description: Blog not found
        "500":
          description: Internal server error
  /blogs/by-category/{id}:
    get:
      tags:
        - Blog
      summary: Retrieve blogs by category
      description: Retrieves all blogs of the same category
      parameters:
        - name: categoryId
          in: path
          required: true
          description: The ID of the category
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: Number of blogs per page
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Blogs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blogs retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/blogs"
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: number
                      totalPages:
                        type: number
                      totalItems:
                        type: number
        "404":
          description: No blogs found in this category
        "500":
          description: Internal server error
  /blogs/like/{id}:
    put:
      tags:
        - Blog
      summary: Like a blog post
      description: Increases the like count for a blog post. Requires admin or subscriber authentication.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog to like
          schema:
            type: string
      responses:
        "200":
          description: Blog likes updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blog likes updated successfully"
                  data:
                    type: object
                    properties:
                      likes:
                        type: number
                        example: 42
        "404":
          description: Blog not found
        "500":
          description: Internal server error
  /blogs/delete/{id}:
    delete:
      tags:
        - Blog
      summary: Delete a blog post
      description: Deletes a blog post from the database. Requires author or admin authentication.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog to delete
          schema:
            type: string
      responses:
        "200":
          description: Blog deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blog deleted successfully"
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "403":
          description: Forbidden, user is not the author or admin
        "404":
          description: Blog not found
        "500":
          description: Internal server error
          
  /blogs/public:
    get:
      tags:
        - Blog
      summary: Retrieve all blogs for public view
      description: Retrieves all blogs from the database for public access with no authentication required
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: Number of blogs per page
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Blogs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blogs retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/blogs"
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: number
                      totalPages:
                        type: number
                      totalItems:
                        type: number
        "500":
          description: Internal server error
          
  /blogs/public/{id}:
    get:
      tags:
        - Blog
      summary: Retrieve a single blog for public view
      description: Retrieves a single blog from the database by its ID for public access with no authentication required
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Blog retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Blog retrieved successfully"
                  data:
                    $ref: "#/components/schemas/blogs"
        "404":
          description: Blog not found
        "500":
          description: Internal server error
          
  /blogs/author/{id}:
    get:
      tags:
        - Blog
      summary: Retrieve author information for a blog
      description: Retrieves the author information for a specific blog post
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog
          schema:
            type: string
      responses:
        "200":
          description: Author retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Author retrieved successfully"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: Author ID
                      name:
                        type: string
                        description: Author's name
                      bio:
                        type: string
                        description: Author's biography
                      profilePicture:
                        type: string
                        description: URL to author's profile picture
        "404":
          description: Author not found
        "500":
          description: Internal server error

components:
  schemas:
    blogs:
      type: object
      properties:
        _id:
          type: string
          description: Blog ID
          example: "6093c44d55742a2a9c9b0d7e"
        title:
          type: string
          description: Blog title
          example: "How to Master TypeScript in 2023"
        content:
          type: string
          description: Blog content
          example: "TypeScript has become essential for modern web development..."
        imageUrl:
          type: string
          description: URL to the blog's featured image
          example: "https://cloudinary.com/my-blog-image.jpg"
        tags:
          type: array
          items:
            type: string
          description: Tags associated with the blog
          example: ["TypeScript", "JavaScript", "Web Development"]
        description:
          type: string
          description: Brief summary of the blog
          example: "Learn the fundamentals of TypeScript and how to apply them in real projects"
        author:
          type: string
          description: Author of the blog
          example: "Jean Niyokwizera"
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2023-05-02T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update date
          example: "2023-05-03T14:20:00.000Z"
        comments:
          type: array
          description: Comments on the blog
          items:
            type: string
            description: Comment ID reference
        likes:
          type: number
          description: Number of likes on the blog
          example: 42