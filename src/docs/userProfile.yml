tags:
  - name: User Profiles
    description: User profile management API endpoints

paths:
  /profile/me:
    get:
      tags:
        - User Profiles
      summary: Get current user's profile
      description: Retrieves the profile information for the currently authenticated user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Profile retrieved successfully"
                  data:
                    $ref: "#/components/schemas/UserProfile"
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "404":
          description: Profile not found
        "500":
          description: Internal server error

    put:
      tags:
        - User Profiles
      summary: Update current user's profile
      description: Updates the profile information for the currently authenticated user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: User's first name
                  example: "Jean"
                lastName:
                  type: string
                  description: User's last name
                  example: "Niyokwizera"
                bio:
                  type: string
                  description: User's biography or description
                  example: "Full-stack developer with expertise in MERN stack"
                socialLinks:
                  type: string
                  format: json
                  description: JSON string containing social media links
                  example: '{"twitter":"https://twitter.com/jeandev", "github": "https://github.com/jeandev"}'
                avatar:
                  type: string
                  format: binary
                  description: Profile image file
              required:
                - firstName
                - lastName
      responses:
        "200":
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Profile updated successfully"
                  data:
                    $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid input data
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "500":
          description: Internal server error
    
    delete:
      tags:
        - User Profiles
      summary: Delete current user's profile
      description: Deletes the profile for the currently authenticated user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Profile deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Profile deleted successfully"
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "404":
          description: Profile not found
        "500":
          description: Internal server error

  /profile/{id}:
    get:
      tags:
        - User Profiles
      summary: Get user profile by ID
      description: Retrieves a user profile by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the profile to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Profile retrieved successfully"
                  data:
                    $ref: "#/components/schemas/UserProfile"
        "404":
          description: Profile not found
        "500":
          description: Internal server error

components:
  schemas:
    UserProfile:
      type: object
      properties:
        _id:
          type: string
          description: Profile ID
          example: "6093c44d55742a2a9c9b0d7e"
        userId:
          type: string
          description: ID of the associated user account
          example: "6093c44d55742a2a9c9b0d7f"
        firstName:
          type: string
          description: User's first name
          example: "Jean"
        lastName:
          type: string
          description: User's last name
          example: "Niyokwizera"
        fullName:
          type: string
          description: User's full name (combined first and last name)
          example: "Jean Niyokwizera"
        bio:
          type: string
          description: User's biography or description
          example: "Full-stack developer with expertise in MERN stack"
        avatar:
          type: string
          description: URL to the user's profile picture
          example: "https://cloudinary.com/profile-pic.jpg"
        socialLinks:
          type: object
          description: User's social media profiles
          properties:
            twitter:
              type: string
              example: "https://twitter.com/jeandev"
            github:
              type: string
              example: "https://github.com/jeandev"
            linkedin:
              type: string
              example: "https://linkedin.com/in/jeandev"
        createdAt:
          type: string
          format: date-time
          description: Profile creation date
          example: "2023-05-02T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Profile last update date
          example: "2023-05-03T14:20:00.000Z"
