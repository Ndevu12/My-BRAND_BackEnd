tags:
  - name: Messages
    description: Contact messages management API endpoints

paths:
  /message/contactme:
    post:
      tags:
        - Messages
      summary: Send a contact message
      description: Sends a new contact message from a website visitor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The message content
                  example: "I'm interested in collaborating on a web development project."
                email:
                  type: string
                  format: email
                  description: The sender's email address
                  example: "sender@example.com"
                name:
                  type: string
                  description: The sender's name
                  example: "Jean Paul"
                subject:
                  type: string
                  description: The subject of the message
                  example: "Project Collaboration"
              required:
                - message
                - email
                - name
      responses:
        "201":
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: "Message sent successfully"
                  data:
                    $ref: "#/components/schemas/Message"
        "400":
          description: Validation error
        "500":
          description: Internal server error

  /message:
    get:
      tags:
        - Messages
      summary: Retrieve all messages
      description: Retrieves all contact messages from the database. Requires admin authentication.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Messages retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Message"
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "500":
          description: Internal server error

  /message/{id}:
    get:
      tags:
        - Messages
      summary: Retrieve a single message
      description: Retrieves a single message by its ID. Requires admin authentication.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the message to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Message retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Message retrieved successfully"
                  data:
                    $ref: "#/components/schemas/Message"
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "404":
          description: Message not found
        "500":
          description: Internal server error

  /message/delete/{id}:
    delete:
      tags:
        - Messages
      summary: Delete a message
      description: Deletes a message by its ID. Requires admin authentication.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the message to delete
          schema:
            type: string
      responses:
        "200":
          description: Message deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Message deleted successfully"
        "401":
          description: Unauthorized, authentication token is missing or invalid
        "404":
          description: Message not found
        "500":
          description: Internal server error

components:
  schemas:
    Message:
      type: object
      properties:
        _id:
          type: string
          description: Message ID
          example: "6093c44d55742a2a9c9b0d7e"
        message:
          type: string
          description: Message content
          example: "I'm interested in collaborating on a web development project."
        email:
          type: string
          format: email
          description: Sender's email address
          example: "sender@example.com"
        name:
          type: string
          description: Sender's name
          example: "Jean Paul"
        subject:
          type: string
          description: Message subject
          example: "Project Collaboration"
        isRead:
          type: boolean
          description: Whether the message has been read
          example: false
        createdAt:
          type: string
          format: date-time
          description: Message creation date
          example: "2023-05-02T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Message last update date
          example: "2023-05-03T14:20:00.000Z"
