tags:
  - name: Authentication
    description: User authentication and account management endpoints

paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Register a new admin
      description: Creates a new admin account in the database. Note that the system is designed to allow only one admin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  description: Full name of the user
                  example: "Jean Muhimana"
                email:
                  type: string
                  format: email
                  description: User's email address (must be unique)
                  example: "muhimana@gmail.com"
                password:
                  type: string
                  description: User's password (must meet security requirements)
                  example: "Ndevuking6ht1234"
                username:
                  type: string
                  description: User's preferred username (must be unique)
                  example: "jeandev"
                phoneNumber:
                  type: string
                  description: User's contact phone number
                  example: "+250789123456"
              required:
                - fullName
                - email
                - password
                - username
                - phoneNumber
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: "Signed up successfully"
        "400":
          description: Username or email already exists / Validation error
        "500":
          description: Internal server error
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticates a user and returns a JWT token for authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's registered email address
                  example: "muhimana@gmail.com"
                password:
                  type: string
                  description: User's password
                  example: "Ndevuking6ht1234"
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Logged in successfully!"
                  token:
                    type: string
                    description: JWT authentication token
        "401":
          description: Invalid credentials
        "500":
          description: Internal server error

  /user/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Invalidates the user's JWT token by adding it to a blacklist
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The JWT token to invalidate
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              required:
                - token
      responses:
        "200":
          description: Logout successful
        "401":
          description: Unauthorized, token is invalid or expired
        "500":
          description: Internal server error